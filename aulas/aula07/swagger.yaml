openapi: 3.0.0
info:
  title: MY REST API
  description:  REST API developed with Express.
  version: 0.1.0
servers:
  - url: http://localhost:3000
    description: Development Enviroment
tags:
  - name: produtos
paths:
  /produtos:
    get:
      tags:
            - produtos
      responses:
        200:
          description: list of registred products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayDeProdutos'
    post:
          tags:
            - produtos
          requestBody:
            description: JSON with data on the new product
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DadosProduto'
          responses:
            201:
              description: Product sucsessfully created
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Produto'
            422:
              description: Name and price are required
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Mensagem'
  /produtos/{produtoId}:
    get:
      tags:
        - produtos
      parameters:
        - in: path
          name: produtoId
          required: true
          type: integer
      responses:
        200:
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
        404:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'
    put:
          tags:
            - produtos
          parameters:
          - in: path 
            name: produtoId
            type: integer
            required: true
            description: ID from analised product
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    nome:
                      type: string
                    preco:
                      type: number
          responses:
            200:
              description: Product update sucsessfully
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Produto'
            404:
              description: Product not found
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Mensagem'
            422:
              description: Name and price are required
              content:
                application/json:
                  shcema:
                    $ref: '#/components/schemas/Mensagem'
    delete:
      tags:
        - produtos
      parameters:
        - in: path
          name: produtoId
          required: true
          type: integer
      responses:
        204:
          description: Product Deleted
        404:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mensagem'

components:
  schemas:
    DadosProduto:
      type: object
      properties:
        nome: 
          type: string
        preco:
          type: number
    Produto:
      type: object
      properties:
        id:
          type: integer
        nome: 
          type: string
        preco:
          type: number
    Mensagem:
      type: object
      properties:
        msg:
          type: string
    ArrayDeProdutos:
      type: array
      items:
        $ref: '#/components/schemas/Produto'